[{"C:\\Users\\User\\Desktop\\e-commerce-store\\src\\index.js":"1","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\App.js":"2","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Header.js":"4","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Footer.js":"5","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Redux\\Store\\Index.js":"6","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Redux\\Reducers\\Index.js":"7","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Redux\\Actions\\Index.js":"8","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Components\\Products\\Products.js":"9","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Components\\Products\\Product.js":"10","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Cart.js":"11","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\ProductDetail.js":"12","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Reducers.js":"13"},{"size":288,"mtime":1609771661002,"results":"14","hashOfConfig":"15"},{"size":2144,"mtime":1609781838473,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":950,"mtime":1609779506347,"results":"18","hashOfConfig":"15"},{"size":410,"mtime":1608223525932,"results":"19","hashOfConfig":"15"},{"size":304,"mtime":1608518233990,"results":"20","hashOfConfig":"15"},{"size":801,"mtime":1608521791158,"results":"21","hashOfConfig":"15"},{"size":998,"mtime":1608518670474,"results":"22","hashOfConfig":"15"},{"size":3149,"mtime":1609780491903,"results":"23","hashOfConfig":"15"},{"size":659,"mtime":1609779223718,"results":"24","hashOfConfig":"15"},{"size":2255,"mtime":1609868860986,"results":"25","hashOfConfig":"15"},{"size":1304,"mtime":1609865613809,"results":"26","hashOfConfig":"15"},{"size":1252,"mtime":1609865771151,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"r3r00w",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\User\\Desktop\\e-commerce-store\\src\\index.js",[],["60","61"],"C:\\Users\\User\\Desktop\\e-commerce-store\\src\\App.js",["62"],"import './App.css';\nimport React, { Component } from 'react'\nimport { NavBar } from './Header'\nimport { Footer } from './Footer'\nimport Products from './Components/Products/Products'\nimport { Provider } from 'react-redux';\n// import store from './Redux/Store/Index';\nimport {createStore} from 'redux'\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\nimport Cart from './Cart'\nimport ProductDetail from './ProductDetail'\nimport reducers from './Reducers'\n\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nclass App extends Component {\n  render() {\n\n    return (\n      <Router>\n      <Provider store={store}>\n      <NavBar/>\n      <Switch>\n      <Route  path=\"/\" exact component={Products}/>\n      <Route  path=\"/cart\" exact component={Cart}/>\n      <Route path='/products/:id' component={ProductDetail} />\n      </Switch>\n      <Footer/>\n      </Provider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n// Use the React/Redux structure to implement a data store in your application. (20 pts)\n\n// Use actions to dispatch data to reducers\n// Use reducers to manipulate the store data\n// Use getters to retrieve data from your store\n// Use both stateless and stateful components. (10 pts)\n\n// Use a form input to filter products. (10 pts)\n\n// At a minimum build 5 components, should be more, remember to simply your components. (20 pts)\n\n// Use a router component to navigate within your application (React Router?). \n//  2.  Use routes to change pages (Router, Route, Link)\n//  3.  Use route params to pass props to a component (15 pts)\n\n// Absolutely no critical bugs and minimal console warnings, \n//preferably none since they are easy to identify. (20 pts)\n\n// Commit and PUSH your work using git DAILY (5 pts)\n\n//This store should have:\n//products page\n//product details page\n//cart page\n//header or menu with navigation \n//footer\n\n//BONUS: \n//Include a mock login page that takes a username and password. \n//Store the username in the store and use it in the app \n//somewhere: header, cart page, or anywhere you might need it.\n//Account page? ","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Header.js",[],"C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Footer.js",[],"C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Redux\\Store\\Index.js",[],["63","64"],"C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Redux\\Reducers\\Index.js",[],"C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Redux\\Actions\\Index.js",[],"C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Components\\Products\\Products.js",["65","66","67"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { productsFetchData } from \"../../Redux/Actions/Index\";\r\nimport PopulateProducts from \"./Product\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Products() {\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [currentProducts, setCurrentProduct] = useState([]);\r\n  const getProducts = async () => {\r\n    const data = await fetch(\r\n      \"https://my-json-server.typicode.com/tdmichaelis/json-api/products\"\r\n    );\r\n    const products = await data.json();\r\n    setProducts(products);\r\n    setCurrentProduct(products);\r\n  };\r\n\r\n  const onCategoryChange = (value) => {\r\n    if (value === \"all\") {\r\n      setCurrentProduct(products);\r\n    } else {\r\n      let filteredProducts = products.filter(\r\n        (product) => product.category === value\r\n      );\r\n      setCurrentProduct(filteredProducts);\r\n    }\r\n  };\r\n\r\n  const productsToRender = currentProducts;\r\n  let productList = () => {\r\n    if (productsToRender.length) {\r\n      return productsToRender.map((product) => {\r\n        return (\r\n          <Link to={`products/${product.id}`}>\r\n            <PopulateProducts key={product.id} product={product} />\r\n          </Link>\r\n        );\r\n      });\r\n    } else {\r\n      return \"LOADING...\";\r\n    }\r\n  };\r\n  const FilteredProducts = () => {\r\n    return (\r\n      <select\r\n        name=\"categories\"\r\n        onChange={(e) => onCategoryChange(e.target.value)}\r\n      >\r\n        <option value=\"all\">All Items</option>\r\n        <option value=\"headphones\">Headphones</option>\r\n        <option value=\"phone\">Phone</option>\r\n        <option value=\"tv\">Television</option>\r\n        <option value=\"small-appliance\">Small Appliance</option>\r\n        <option value=\"refrigerator\">Refrigerator</option>\r\n        <option value=\"watch\">Watch</option>\r\n        <option value=\"action-camera\">Action-Camera</option>\r\n      </select>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <FilteredProducts />\r\n      {productList()}\r\n    </>\r\n  );\r\n}\r\n\r\n// class Products extends Component {\r\n//   componentDidMount() {\r\n//     this.props.fetchData(\r\n//       \"https://my-json-server.typicode.com/tdmichaelis/json-api/products\"\r\n//     );\r\n//   }\r\n//   render() {\r\n//     const productsToRender = this.props.products;\r\n//     let productList = () => {\r\n//       if (productsToRender.length) {\r\n//         return productsToRender.map((product) => {\r\n//           return <PopulateProducts key={product.id} product={product} />;\r\n//         });\r\n//       } else {\r\n//         return \"LOADING...\";\r\n//       }\r\n//     };\r\n//     return productList();\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     products: state.products,\r\n//     hasErrored: state.productsHasErrored,\r\n//     isLoading: state.productsIsLoading,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     fetchData: (url) => dispatch(productsFetchData(url)),\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Products);\r\n\r\nexport default Products;\r\n","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Components\\Products\\Product.js",["68"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst PopulateProducts = (props) => {\r\n  const styleImages = {\r\n    \"max-height\": \"50px\",\r\n  };\r\n  const borders = {\r\n    \"border-bottom\": \"1px solid black\",\r\n  };\r\n  const indProducts = {\r\n    \"max-width\": \"200px\",\r\n    border: \"1px solid black\",\r\n  };\r\n  // console.log(props)\r\n  return (\r\n    <div style={indProducts}>\r\n      <h6 style={borders}>{props.product.title}</h6>\r\n      <img\r\n        src={props.product.img}\r\n        style={styleImages}\r\n        alt={props.product.title}\r\n      />\r\n      <p>${props.product.price}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default PopulateProducts;\r\n","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Cart.js",["69"],"C:\\Users\\User\\Desktop\\e-commerce-store\\src\\ProductDetail.js",["70"],"import React, { useEffect, useState } from \"react\";\r\nimport {useDispatch} from 'react-redux'\r\n\r\nfunction ProductDetail({ match }) {\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const styleImages = {\r\n    \"max-height\": \"150px\",\r\n  };\r\n\r\n  const [product, setProducts] = useState([]);\r\n  const fetchProducts = async () => {\r\n    const fetchProduct = await fetch(\r\n      `https://my-json-server.typicode.com/tdmichaelis/json-api/products/${match.params.id}`\r\n    );\r\n    const product = await fetchProduct.json();\r\n\r\n    setProducts(product);\r\n    console.log(product);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const addItem = (product) => {\r\n      return {\r\n          type: 'ADD_ITEM',\r\n          payload: {\r\n              title: product.title, \r\n              img: product.img, \r\n              price: product.price, \r\n              quantity: 1\r\n          }\r\n      }\r\n  }\r\n  console.log(product)\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h6>{product.title}</h6>\r\n        <img src={product.img} alt={product.title} style={styleImages}/>\r\n        <p>{product.description}</p>\r\n        <p>${product.price}</p>\r\n        <button onClick={() => {\r\n            dispatch(addItem(product))\r\n        }}>Add to cart</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ProductDetail;\r\n","C:\\Users\\User\\Desktop\\e-commerce-store\\src\\Reducers.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":9,"column":49,"nodeType":"77","messageId":"78","endLine":9,"endColumn":53},{"ruleId":"71","replacedBy":"79"},{"ruleId":"73","replacedBy":"80"},{"ruleId":"75","severity":1,"message":"81","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"82","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":17},{"ruleId":"75","severity":1,"message":"83","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":27},{"ruleId":"75","severity":1,"message":"76","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":14},{"ruleId":"75","severity":1,"message":"84","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":7,"column":6,"nodeType":"87","endLine":7,"endColumn":8,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["89"],["90"],"'Component' is defined but never used.","'connect' is defined but never used.","'productsFetchData' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.","ArrayExpression",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [fetchProducts]",{"range":"94","text":"95"},[181,183],"[fetchProducts]"]